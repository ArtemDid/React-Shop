{"version":3,"sources":["store/store.js","components/Shop.js","actions/actions.js","components/Cart.js","components/AppRoot.js","reportWebVitals.js","index.js"],"names":["initialStateShop","type","cost","discount","buyProd","summaProd","store","createStore","state","action","payload","subscribe","console","log","getState","Shop","prod","this","props","dispatch","indexOf","className","map","value","onClick","getProd","React","Component","connect","Cart","costPapaya","masBanana","filter","item","masApple","masPapaya","countBanana","length","countApple","countPapaya","costBanana","costApple","alert","AppRoot","exact","path","component","to","activeClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e560ea2.chunk.js","sourcesContent":["import { createStore } from 'redux';\r\n\r\nconst initialStateShop = {\r\n    type: [\"banana\", \"apple\", \"papaya\"],\r\n    cost: [10, 8, 10],\r\n    discount: 5,\r\n    buyProd: [],\r\n    summaProd: []\r\n}\r\n\r\nconst reduser = function (state = initialStateShop, action) {\r\n\r\n    switch (action.type) {\r\n        case \"ACTION_SET_BUY_PROD\":\r\n            {\r\n                return { ...state, buyProd: [...state.buyProd, action.payload] }\r\n            }\r\n        case \"ACTION_SET_SUMMA\":\r\n            {\r\n                return { ...state, summaProd: [...state.summaProd, action.payload] }\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst store = createStore(reduser);\r\n\r\nstore.subscribe(function () {\r\n    console.log(store.getState());\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { CreateActionSetBuyProd, CreateActionSetSumma } from '../actions/actions'\r\nimport store from '../store/store';\r\n\r\nclass Shop extends React.Component {\r\n\r\n    getProd(prod) {\r\n\r\n        this.props.dispatch(CreateActionSetBuyProd(prod));\r\n        this.props.dispatch(CreateActionSetSumma(store.getState().cost[store.getState().type.indexOf(prod)]));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-evenly\">\r\n                    <div className=\"col text-info\">\r\n                        <div className=\"row justify-content-evenly\">\r\n                            {\r\n                                store.getState().type.map((prod) => {\r\n                                    return (\r\n                                        <div className=\"col-auto \">\r\n                                            {prod}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-evenly\">\r\n                            {\r\n                                store.getState().cost.map((cost) => {\r\n                                    return (\r\n                                        <div className=\"col-auto \">\r\n                                            {cost}\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n                        <div className=\"row justify-content-evenly\">\r\n                            {\r\n                                store.getState().type.map((prod) => {\r\n                                    return (\r\n                                        <div className=\"col-auto \">\r\n                                            <input type=\"button\" className=\"btn btn-success\" value=\"Add to cart\"  onClick={() => this.getProd(prod)} /> \r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        buyProd: state.buyProd,\r\n        summaProd: state.summaProd\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Shop);\r\n","const CreateActionSetBuyProd = function (buyProd) {\r\n  return {\r\n    type: \"ACTION_SET_BUY_PROD\",\r\n    payload: buyProd\r\n  }\r\n}\r\n\r\nconst CreateActionSetSumma = function (summaProd) {\r\n  return {\r\n    type: \"ACTION_SET_SUMMA\",\r\n    payload: summaProd\r\n  }\r\n}\r\n\r\nexport { CreateActionSetBuyProd, CreateActionSetSumma };","import React from 'react';\r\nimport store from '../store/store';\r\n\r\nclass Cart extends React.Component {\r\n\r\n    render() {\r\n\r\n        let masBanana = store.getState().buyProd.filter(item => item === store.getState().type[0]);\r\n        let masApple = store.getState().buyProd.filter(item => item === store.getState().type[1]);\r\n        let masPapaya = store.getState().buyProd.filter(item => item === store.getState().type[2]);\r\n\r\n        let countBanana = masBanana.length;\r\n        let countApple = masApple.length;\r\n        let countPapaya = masPapaya.length;\r\n\r\n        let costBanana = countBanana * store.getState().cost[0];\r\n        let costApple = countApple * store.getState().cost[1];\r\n        let costPapaya;\r\n\r\n        if (countPapaya >= 3) {\r\n            if (countPapaya % 3 === 0) {\r\n                costPapaya = countPapaya * store.getState().cost[2] - (countPapaya / 3) * store.getState().discount;\r\n            }\r\n            else if (countPapaya % 3 === 1) {\r\n                costPapaya = countPapaya * store.getState().cost[2] - ((countPapaya - 1) / 3) * store.getState().discount;\r\n            }\r\n            else {\r\n                costPapaya = countPapaya * store.getState().cost[2] - ((countPapaya - 2) / 3) * store.getState().discount;\r\n            }\r\n        }\r\n        else {\r\n            costPapaya = countPapaya * store.getState().cost[2];\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row justify-content-evenly\">\r\n                    <div className=\"col text-primary\">\r\n                        {countBanana > 0 &&\r\n                            <h5>\r\n                                {store.getState().type[0]} - ({countBanana})pcs. - Summa = ${costBanana}\r\n                            </h5>\r\n                        }\r\n                        {countApple > 0 &&\r\n                            <h5>\r\n                                {store.getState().type[1]} - ({countApple})pcs. - Summa = ${costApple}\r\n                            </h5>\r\n                        }\r\n                        {countPapaya > 0 &&\r\n                            <h5>\r\n                                {store.getState().type[2]} - ({countPapaya})pcs. - Summa = ${costPapaya}\r\n                            </h5>\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-auto \">\r\n                        <input type=\"button\" className=\"btn btn-success\" value=\"Buy\" onClick={() => {\r\n\r\n                            if (countBanana > 0 || countApple > 0 || countPapaya > 0)\r\n                                alert(\"Bought!\")\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cart;","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { Route, BrowserRouter, Switch, NavLink } from 'react-router-dom';\r\n\r\nimport Shop from './Shop'\r\nimport store from '../store/store';\r\nimport Cart from './Cart';\r\n\r\nfunction AppRoot() {\r\n    return (\r\n        <Provider store={store}>\r\n            <div className=\"container-fluid\">\r\n                <BrowserRouter>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-10\">\r\n                            <Switch>\r\n                                <Route exact path=\"/\" component={Shop} />\r\n                                <Route path=\"/cart\" component={Cart} />\r\n                                <Route component={Cart} />\r\n                            </Switch>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <nav>\r\n                                <NavLink to=\"/\" className=\"btn btn-primary\" activeClassName=\"active\">Home</NavLink>\r\n                                <NavLink to=\"/cart\" className=\"btn btn-primary\" activeClassName=\"active\">Cart</NavLink>\r\n                            </nav>\r\n                        </div>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default AppRoot;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRoot from './components/AppRoot';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRoot />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nreportWebVitals();\n"],"sourceRoot":""}